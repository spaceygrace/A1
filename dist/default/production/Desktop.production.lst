

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Thu Jan 25 09:32:11 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.43
    16                           ; Generated 25/07/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F45K20 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _INTCON	set	4082
    50  0000                     _SPBRG	set	4015
    51  0000                     _RCREG	set	4014
    52  0000                     _TXREG	set	4013
    53  0000                     _CREN	set	32092
    54  0000                     _SPEN	set	32095
    55  0000                     _RX9	set	32094
    56  0000                     _TXEN	set	32101
    57  0000                     _SYNC	set	32100
    58  0000                     _BRG16	set	32195
    59  0000                     _BRGH	set	32098
    60  0000                     _RCIF	set	31989
    61  0000                     _TXIF	set	31988
    62                           
    63                           	psect	smallconst
    64  000600                     __psmallconst:
    65                           	opt stack 0
    66  000600  00                 	db	0
    67  000601                     STR_4:
    68  000601  0A                 	db	10
    69  000602  2A                 	db	42
    70  000603  2A                 	db	42
    71  000604  2A                 	db	42
    72  000605  2A                 	db	42
    73  000606  2A                 	db	42
    74  000607  2A                 	db	42
    75  000608  2A                 	db	42
    76  000609  2A                 	db	42
    77  00060A  2A                 	db	42
    78  00060B  2A                 	db	42
    79  00060C  2A                 	db	42
    80  00060D  2A                 	db	42
    81  00060E  2A                 	db	42
    82  00060F  2A                 	db	42
    83  000610  2A                 	db	42
    84  000611  2A                 	db	42
    85  000612  2A                 	db	42
    86  000613  2A                 	db	42
    87  000614  2A                 	db	42
    88  000615  2A                 	db	42
    89  000616  2A                 	db	42
    90  000617  2A                 	db	42
    91  000618  2A                 	db	42
    92  000619  2A                 	db	42
    93  00061A  2A                 	db	42
    94  00061B  2A                 	db	42
    95  00061C  2A                 	db	42
    96  00061D  2A                 	db	42
    97  00061E  2A                 	db	42
    98  00061F  2A                 	db	42
    99  000620  2A                 	db	42
   100  000621  2A                 	db	42
   101  000622  2A                 	db	42
   102  000623  2A                 	db	42
   103  000624  2A                 	db	42
   104  000625  2A                 	db	42
   105  000626  2A                 	db	42
   106  000627  2A                 	db	42
   107  000628  2A                 	db	42
   108  000629  2A                 	db	42
   109  00062A  2A                 	db	42
   110  00062B  2A                 	db	42
   111  00062C  0A                 	db	10
   112  00062D  00                 	db	0
   113  00062E                     STR_5:
   114  00062E  2A                 	db	42
   115  00062F  2A                 	db	42
   116  000630  2A                 	db	42
   117  000631  2A                 	db	42
   118  000632  2A                 	db	42
   119  000633  2A                 	db	42
   120  000634  2A                 	db	42
   121  000635  2A                 	db	42
   122  000636  2A                 	db	42
   123  000637  20                 	db	32
   124  000638  50                 	db	80	;'P'
   125  000639  72                 	db	114	;'r'
   126  00063A  6F                 	db	111	;'o'
   127  00063B  67                 	db	103	;'g'
   128  00063C  72                 	db	114	;'r'
   129  00063D  61                 	db	97	;'a'
   130  00063E  6D                 	db	109	;'m'
   131  00063F  20                 	db	32
   132  000640  43                 	db	67	;'C'
   133  000641  6F                 	db	111	;'o'
   134  000642  6D                 	db	109	;'m'
   135  000643  70                 	db	112	;'p'
   136  000644  6C                 	db	108	;'l'
   137  000645  65                 	db	101	;'e'
   138  000646  74                 	db	116	;'t'
   139  000647  65                 	db	101	;'e'
   140  000648  21                 	db	33
   141  000649  20                 	db	32
   142  00064A  2A                 	db	42
   143  00064B  2A                 	db	42
   144  00064C  2A                 	db	42
   145  00064D  2A                 	db	42
   146  00064E  2A                 	db	42
   147  00064F  2A                 	db	42
   148  000650  2A                 	db	42
   149  000651  2A                 	db	42
   150  000652  2A                 	db	42
   151  000653  0A                 	db	10
   152  000654  00                 	db	0
   153  000655                     STR_2:
   154  000655  2A                 	db	42
   155  000656  2A                 	db	42
   156  000657  53                 	db	83	;'S'
   157  000658  6B                 	db	107	;'k'
   158  000659  65                 	db	101	;'e'
   159  00065A  6C                 	db	108	;'l'
   160  00065B  65                 	db	101	;'e'
   161  00065C  74                 	db	116	;'t'
   162  00065D  6F                 	db	111	;'o'
   163  00065E  6E                 	db	110	;'n'
   164  00065F  20                 	db	32
   165  000660  63                 	db	99	;'c'
   166  000661  6F                 	db	111	;'o'
   167  000662  64                 	db	100	;'d'
   168  000663  65                 	db	101	;'e'
   169  000664  20                 	db	32
   170  000665  66                 	db	102	;'f'
   171  000666  6F                 	db	111	;'o'
   172  000667  72                 	db	114	;'r'
   173  000668  20                 	db	32
   174  000669  41                 	db	65	;'A'
   175  00066A  73                 	db	115	;'s'
   176  00066B  73                 	db	115	;'s'
   177  00066C  69                 	db	105	;'i'
   178  00066D  67                 	db	103	;'g'
   179  00066E  6E                 	db	110	;'n'
   180  00066F  6D                 	db	109	;'m'
   181  000670  65                 	db	101	;'e'
   182  000671  6E                 	db	110	;'n'
   183  000672  74                 	db	116	;'t'
   184  000673  20                 	db	32
   185  000674  32                 	db	50	;'2'
   186  000675  2E                 	db	46
   187  000676  2A                 	db	42
   188  000677  2A                 	db	42
   189  000678  0A                 	db	10
   190  000679  00                 	db	0
   191  0000                     
   192                           ; #config settings
   193  00067A  00                 	db	0	; dummy byte at the end
   194  0000                     
   195                           	psect	cinit
   196  00070C                     __pcinit:
   197                           	opt stack 0
   198  00070C                     start_initialization:
   199                           	opt stack 0
   200  00070C                     __initialization:
   201                           	opt stack 0
   202  00070C                     end_of_initialization:
   203                           	opt stack 0
   204  00070C                     __end_of__initialization:
   205                           	opt stack 0
   206  00070C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   207  00070E  6EF8               	movwf	tblptru,c
   208  000710  0E06               	movlw	high __Lsmallconst
   209  000712  6EF7               	movwf	tblptrh,c
   210  000714  0100               	movlb	0
   211  000716  EF3E  F003         	goto	_main	;jump to C main() function
   212                           tblptru	equ	0xFF8
   213                           tblptrh	equ	0xFF7
   214                           
   215                           	psect	cstackCOMRAM
   216  000001                     __pcstackCOMRAM:
   217                           	opt stack 0
   218  000001                     putch@byte:
   219                           	opt stack 0
   220                           
   221                           ; 1 bytes @ 0x0
   222  000001                     	ds	1
   223  000002                     ?_printf:
   224                           	opt stack 0
   225  000002                     printf@f:
   226                           	opt stack 0
   227                           
   228                           ; 2 bytes @ 0x1
   229  000002                     	ds	2
   230  000004                     printf@ap:
   231                           	opt stack 0
   232                           
   233                           ; 2 bytes @ 0x3
   234  000004                     	ds	2
   235  000006                     printf@c:
   236                           	opt stack 0
   237                           
   238                           ; 1 bytes @ 0x5
   239  000006                     	ds	1
   240  000007                     tblptru	equ	0xFF8
   241                           tblptrh	equ	0xFF7
   242                           
   243                           ; 1 bytes @ 0x6
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 27 in file "//nsccdtfs4/students/W0401926/Assignments/Programming/Assignment I/Var_Op.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : 0/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   263 ;;      Params:         0       0       0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called:    2
   269 ;; This function calls:
   270 ;;		_printf
   271 ;;		_setUSART
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277                           	psect	text0
   278  00067C                     __ptext0:
   279                           	opt stack 0
   280  00067C                     _main:
   281                           	opt stack 29
   282                           
   283                           ;Var_Op.c: 29: setUSART();
   284                           
   285                           ;incstack = 0
   286  00067C  EC7A  F003         	call	_setUSART	;wreg free
   287                           
   288                           ;Var_Op.c: 30: printf("******************************************\n");
   289  000680  0E02               	movlw	low (STR_4+1)
   290  000682  6E02               	movwf	printf@f,c
   291  000684  0E06               	movlw	high (STR_4+1)
   292  000686  6E03               	movwf	printf@f+1,c
   293  000688  EC65  F003         	call	_printf	;wreg free
   294                           
   295                           ;Var_Op.c: 31: printf("**Skeleton code for Assignment 2.**\n");
   296  00068C  0E55               	movlw	low STR_2
   297  00068E  6E02               	movwf	printf@f,c
   298  000690  0E06               	movlw	high STR_2
   299  000692  6E03               	movwf	printf@f+1,c
   300  000694  EC65  F003         	call	_printf	;wreg free
   301                           
   302                           ;Var_Op.c: 32: printf("******************************************\n");
   303  000698  0E02               	movlw	low (STR_4+1)
   304  00069A  6E02               	movwf	printf@f,c
   305  00069C  0E06               	movlw	high (STR_4+1)
   306  00069E  6E03               	movwf	printf@f+1,c
   307  0006A0  EC65  F003         	call	_printf	;wreg free
   308                           
   309                           ;Var_Op.c: 38: printf("\n******************************************\n");
   310  0006A4  0E01               	movlw	low STR_4
   311  0006A6  6E02               	movwf	printf@f,c
   312  0006A8  0E06               	movlw	high STR_4
   313  0006AA  6E03               	movwf	printf@f+1,c
   314  0006AC  EC65  F003         	call	_printf	;wreg free
   315                           
   316                           ;Var_Op.c: 39: printf("********* Program Complete! *********\n");
   317  0006B0  0E2E               	movlw	low STR_5
   318  0006B2  6E02               	movwf	printf@f,c
   319  0006B4  0E06               	movlw	high STR_5
   320  0006B6  6E03               	movwf	printf@f+1,c
   321  0006B8  EC65  F003         	call	_printf	;wreg free
   322                           
   323                           ;Var_Op.c: 40: printf("******************************************\n");
   324  0006BC  0E02               	movlw	low (STR_4+1)
   325  0006BE  6E02               	movwf	printf@f,c
   326  0006C0  0E06               	movlw	high (STR_4+1)
   327  0006C2  6E03               	movwf	printf@f+1,c
   328  0006C4  EC65  F003         	call	_printf	;wreg free
   329  0006C8                     l50:
   330  0006C8  D7FF               	goto	l50
   331  0006CA                     __end_of_main:
   332                           	opt stack 0
   333                           tblptru	equ	0xFF8
   334                           tblptrh	equ	0xFF7
   335                           
   336 ;; *************** function _setUSART *****************
   337 ;; Defined at:
   338 ;;		line 46 in file "//nsccdtfs4/students/W0401926/Assignments/Programming/Assignment I/Var_Op.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;		None
   343 ;; Return value:  Size  Location     Type
   344 ;;                  1    wreg      void 
   345 ;; Registers used:
   346 ;;		wreg, status,2
   347 ;; Tracked objects:
   348 ;;		On entry : 0/0
   349 ;;		On exit  : 0/0
   350 ;;		Unchanged: 0/0
   351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   352 ;;      Params:         0       0       0       0       0       0       0
   353 ;;      Locals:         0       0       0       0       0       0       0
   354 ;;      Temps:          0       0       0       0       0       0       0
   355 ;;      Totals:         0       0       0       0       0       0       0
   356 ;;Total ram usage:        0 bytes
   357 ;; Hardware stack levels used:    1
   358 ;; This function calls:
   359 ;;		Nothing
   360 ;; This function is called by:
   361 ;;		_main
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text1
   366  0006F4                     __ptext1:
   367                           	opt stack 0
   368  0006F4                     _setUSART:
   369                           	opt stack 30
   370                           
   371                           ;Var_Op.c: 48: BRGH = 1;
   372                           
   373                           ;incstack = 0
   374  0006F4  84AC               	bsf	4012,2,c	;volatile
   375                           
   376                           ;Var_Op.c: 49: BRG16= 0;
   377  0006F6  96B8               	bcf	4024,3,c	;volatile
   378                           
   379                           ;Var_Op.c: 50: SPBRG = 51;
   380  0006F8  0E33               	movlw	51
   381  0006FA  6EAF               	movwf	4015,c	;volatile
   382                           
   383                           ;Var_Op.c: 51: SYNC = 0;
   384  0006FC  98AC               	bcf	4012,4,c	;volatile
   385                           
   386                           ;Var_Op.c: 52: TXEN = 1;
   387  0006FE  8AAC               	bsf	4012,5,c	;volatile
   388                           
   389                           ;Var_Op.c: 53: INTCON = 0x00;
   390  000700  0E00               	movlw	0
   391  000702  6EF2               	movwf	intcon,c	;volatile
   392                           
   393                           ;Var_Op.c: 55: RX9 =0;
   394  000704  9CAB               	bcf	4011,6,c	;volatile
   395                           
   396                           ;Var_Op.c: 56: SPEN =1;
   397  000706  8EAB               	bsf	4011,7,c	;volatile
   398                           
   399                           ;Var_Op.c: 57: CREN = 0;
   400  000708  98AB               	bcf	4011,4,c	;volatile
   401  00070A  0012               	return		;funcret
   402  00070C                     __end_of_setUSART:
   403                           	opt stack 0
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           intcon	equ	0xFF2
   407                           
   408 ;; *************** function _printf *****************
   409 ;; Defined at:
   410 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\doprnt.c"
   411 ;; Parameters:    Size  Location     Type
   412 ;;  f               2    1[COMRAM] PTR const unsigned char 
   413 ;;		 -> STR_6(44), STR_5(39), STR_4(45), STR_3(44), 
   414 ;;		 -> STR_2(37), STR_1(44), 
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  tmpval          4    0        struct .
   417 ;;  cp              3    0        PTR const unsigned char 
   418 ;;  ap              2    3[COMRAM] PTR void [1]
   419 ;;		 -> ?_printf(2), 
   420 ;;  len             2    0        unsigned int 
   421 ;;  val             2    0        unsigned int 
   422 ;;  c               1    5[COMRAM] char 
   423 ;;  flag            1    0        unsigned char 
   424 ;;  prec            1    0        char 
   425 ;; Return value:  Size  Location     Type
   426 ;;                  2    1[COMRAM] int 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   434 ;;      Params:         2       0       0       0       0       0       0
   435 ;;      Locals:         3       0       0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0       0       0
   437 ;;      Totals:         5       0       0       0       0       0       0
   438 ;;Total ram usage:        5 bytes
   439 ;; Hardware stack levels used:    1
   440 ;; Hardware stack levels required when called:    1
   441 ;; This function calls:
   442 ;;		_putch
   443 ;; This function is called by:
   444 ;;		_main
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           	psect	text2
   449  0006CA                     __ptext2:
   450                           	opt stack 0
   451  0006CA                     _printf:
   452                           	opt stack 29
   453                           
   454                           ;doprnt.c: 466: va_list ap;
   455                           ;doprnt.c: 499: signed char c;
   456                           ;doprnt.c: 506: signed char prec;
   457                           ;doprnt.c: 508: unsigned char flag;
   458                           ;doprnt.c: 523: union {
   459                           ;doprnt.c: 524: unsigned long vd;
   460                           ;doprnt.c: 525: double integ;
   461                           ;doprnt.c: 526: } tmpval;
   462                           ;doprnt.c: 528: unsigned int val;
   463                           ;doprnt.c: 529: unsigned len;
   464                           ;doprnt.c: 530: const char * cp;
   465                           ;doprnt.c: 533: *ap = __va_start();
   466                           
   467                           ;incstack = 0
   468  0006CA  0E04               	movlw	low (?_printf+2)
   469  0006CC  6E04               	movwf	printf@ap,c
   470  0006CE  0E00               	movlw	high (?_printf+2)
   471  0006D0  6E05               	movwf	printf@ap+1,c
   472                           
   473                           ;doprnt.c: 536: while(c = *f++) {
   474  0006D2  D003               	goto	l63
   475  0006D4                     
   476                           ;doprnt.c: 540: {
   477                           ;doprnt.c: 541: (putch(c) );
   478  0006D4  5006               	movf	printf@c,w,c
   479  0006D6  EC8D  F003         	call	_putch
   480  0006DA                     l63:
   481  0006DA  C002  FFF6         	movff	printf@f,tblptrl
   482  0006DE  C003  FFF7         	movff	printf@f+1,tblptrh
   483  0006E2  4A02               	infsnz	printf@f,f,c
   484  0006E4  2A03               	incf	printf@f+1,f,c
   485  0006E6                     	if	0	;tblptru may be non-zero
   486  0006E6                     	endif
   487  0006E6                     	if	0	;tblptru may be non-zero
   488  0006E6                     	endif
   489  0006E6  0008               	tblrd		*
   490  0006E8  CFF5 F006          	movff	tablat,printf@c
   491  0006EC  5006               	movf	printf@c,w,c
   492  0006EE  B4D8               	btfsc	status,2,c
   493  0006F0  0012               	return	
   494  0006F2  D7F0               	goto	l64
   495  0006F4                     __end_of_printf:
   496                           	opt stack 0
   497                           tblptru	equ	0xFF8
   498                           tblptrh	equ	0xFF7
   499                           tblptrl	equ	0xFF6
   500                           tablat	equ	0xFF5
   501                           intcon	equ	0xFF2
   502                           status	equ	0xFD8
   503                           
   504 ;; *************** function _putch *****************
   505 ;; Defined at:
   506 ;;		line 6 in file "//nsccdtfs4/students/W0401926/Assignments/Programming/files/usart.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  byte            1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  byte            1    0[COMRAM] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   520 ;;      Params:         0       0       0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0       0       0
   523 ;;      Totals:         1       0       0       0       0       0       0
   524 ;;Total ram usage:        1 bytes
   525 ;; Hardware stack levels used:    1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_printf
   530 ;;		_getche
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           	psect	text3
   535  00071A                     __ptext3:
   536                           	opt stack 0
   537  00071A                     _putch:
   538                           	opt stack 29
   539                           
   540                           ;incstack = 0
   541                           ;putch@byte stored from wreg
   542  00071A  6E01               	movwf	putch@byte,c
   543  00071C                     
   544                           ;usart.c: 10: continue;
   545                           
   546                           ;usart.c: 9: while(!TXIF)
   547  00071C  A89E               	btfss	3998,4,c	;volatile
   548  00071E  D7FE               	goto	l688
   549                           
   550                           ;usart.c: 11: TXREG = byte;
   551  000720  C001  FFAD         	movff	putch@byte,4013	;volatile
   552  000724  0012               	return		;funcret
   553  000726                     __end_of_putch:
   554                           	opt stack 0
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           intcon	equ	0xFF2
   560                           status	equ	0xFD8
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           intcon	equ	0xFF2
   566                           status	equ	0xFD8
   567                           
   568                           	psect	rparam
   569  0000                     tblptru	equ	0xFF8
   570                           tblptrh	equ	0xFF7
   571                           tblptrl	equ	0xFF6
   572                           tablat	equ	0xFF5
   573                           intcon	equ	0xFF2
   574                           status	equ	0xFD8


Data Sizes:
    Strings     121
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 45
		 -> STR_6(CODE[44]), STR_5(CODE[39]), STR_4(CODE[45]), STR_3(CODE[44]), 
		 -> STR_2(CODE[37]), STR_1(CODE[44]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     517
                             _printf
                           _setUSART
 ---------------------------------------------------------------------------------
 (1) _setUSART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     517
                                              1 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _printf
     _putch
   _setUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      6       6       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Thu Jan 25 09:32:11 2018

                     l50 06C8                       l63 06DA                       l64 06D4  
                    l688 071C                      _RX9 007D5E             __CFG_LVP$OFF 000000  
                   STR_1 0602                     STR_2 0655                     STR_3 0602  
                   STR_4 0601                     STR_5 062E                     STR_6 0602  
                   _BRGH 007D62                     _CREN 007D5C                     _RCIF 007CF5  
                   _SPEN 007D5F                     _TXIF 007CF4                     _TXEN 007D65  
                   _SYNC 007D64                     _main 067C                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _BRG16 007DC3  
                  _RCREG 000FAE                    _SPBRG 000FAF                    _TXREG 000FAD  
                  _putch 071A                    tablat 000FF5                    status 000FD8  
        __initialization 070C             __end_of_main 06CA                   ??_main 0007  
          __activetblptr 000001                   ?_putch 0001           __CFG_WDTEN$OFF 000000  
                 _INTCON 000FF2         __end_of_setUSART 070C                   _printf 06CA  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 070C  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_putch 0726  
                ??_putch 0001                  ?_printf 0002                ?_setUSART 0001  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 070C                  __ramtop 0600                  __ptext0 067C  
                __ptext1 06F4                  __ptext2 06CA                  __ptext3 071A  
        __size_of_printf 002A     end_of_initialization 070C               ??_setUSART 0001  
                printf@c 0006                  printf@f 0002           __end_of_printf 06F4  
    start_initialization 070C                 ??_printf 0004        __size_of_setUSART 0018  
            __smallconst 0600           __size_of_putch 000C                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0600            __size_of_main 004E  
               _setUSART 06F4                putch@byte 0001                 printf@ap 0004  
      __CFG_FOSC$INTIO67 000000  
